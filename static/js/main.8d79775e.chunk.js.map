{"version":3,"sources":["app.module.css","statistics-ui/statistics.js","feedbackoptions-ui/feedbackoptions.js","section-ui/section.js","notification-ui/notification.js","App.js","index.js","statistics-ui/statistics.module.css","feedbackoptions-ui/feedback.module.css","notification-ui/notification.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","list","value","FeedbackOptions","options","onLeaveFeedback","map","option","listItem","type","button","onClick","Section","title","children","Notification","message","App","state","getState","Object","keys","stateKey","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","container","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,yB,uICoCfC,EAjCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIC,UAAWC,IAAOC,KAAtB,UACE,wCACQ,sBAAMF,UAAWC,IAAOE,MAAxB,SAAgCR,OAExC,2CACW,sBAAMK,UAAWC,IAAOE,MAAxB,SAAgCP,OAE3C,uCACO,sBAAMI,UAAWC,IAAOE,MAAxB,SAAgCN,OAEvC,yCACS,sBAAMG,UAAWC,IAAOE,MAAxB,SAAgCL,OAEzC,oDACqB,IACnB,uBAAME,UAAWC,IAAOE,MAAxB,UACa,IAAVL,EAAcC,EAAqB,EADtC,c,gBCUOK,EA3BS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,oBAAIN,UAAWC,IAAOC,KAAtB,SACGG,EAAQE,KAAI,SAAAC,GACX,OACE,oBAAiBR,UAAWC,IAAOQ,SAAnC,SACE,wBACEC,KAAK,SACLV,UAAWC,IAAOU,OAClBC,QAAS,WACPN,EAAgBE,IAJpB,SAOGA,KARIA,SCQJK,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,gBCKQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,oBAAIjB,UAAWC,IAAOa,MAAtB,SAA8BG,K,iBC4DxBC,E,4MAzDbC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPuB,SAAW,WAET,OADiBC,OAAOC,KAAK,EAAKH,Q,EAIpCb,gBAAkB,SAAAiB,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAWE,EAAUF,GAAY,O,EAItCG,mBAAqB,WAEnB,OADsB,EAAKP,MAAMxB,KAAO,EAAKwB,MAAMvB,QAAU,EAAKuB,MAAMtB,K,EAI1E8B,gCAAkC,WAIhC,OAHmBC,KAAKC,MACrB,EAAKV,MAAMxB,KAAO,EAAK+B,qBAAwB,M,4CAKpD,WACE,OACE,sBAAK1B,UAAWC,IAAO6B,UAAvB,UACE,cAAC,EAAD,CAAShB,MAAM,wBAAf,SACE,cAAC,EAAD,CACET,QAAS0B,KAAKX,WACdd,gBAAiByB,KAAKzB,oBAI1B,cAAC,EAAD,CAASQ,MAAM,aAAf,SACiC,IAA9BiB,KAAKL,qBACJ,cAAC,EAAD,CAAcT,QAAQ,sBAEtB,cAAC,EAAD,CACEtB,KAAMoC,KAAKZ,MAAMxB,KACjBC,QAASmC,KAAKZ,MAAMvB,QACpBC,IAAKkC,KAAKZ,MAAMtB,IAChBC,MAAOiC,KAAKL,qBACZ3B,mBAAoBgC,KAAKJ,6C,GAjDrBK,IAAMC,WCHxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1B9C,EAAOC,QAAU,CAAC,KAAO,yBAAyB,MAAQ,4B,kBCA1DD,EAAOC,QAAU,CAAC,OAAS,yBAAyB,KAAO,uBAAuB,SAAW,6B,kBCA7FD,EAAOC,QAAU,CAAC,MAAQ,+B","file":"static/js/main.8d79775e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__nJIz6\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={styles.list}>\n      <li>\n        Good: <span className={styles.value}>{good}</span>\n      </li>\n      <li>\n        Neutral: <span className={styles.value}>{neutral}</span>\n      </li>\n      <li>\n        Bad: <span className={styles.value}>{bad}</span>\n      </li>\n      <li>\n        Total: <span className={styles.value}>{total}</span>\n      </li>\n      <li>\n        Positive feedback:{' '}\n        <span className={styles.value}>\n          {total !== 0 ? positivePercentage : 0}%\n        </span>\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func.isRequired,\n  positivePercentage: PropTypes.func.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './feedback.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <ul className={styles.list}>\n      {options.map(option => {\n        return (\n          <li key={option} className={styles.listItem}>\n            <button\n              type=\"button\"\n              className={styles.button}\n              onClick={() => {\n                onLeaveFeedback(option);\n              }}\n            >\n              {option}\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <h2 className={styles.title}>{message}</h2>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from 'react';\nimport Statistics from './statistics-ui/statistics';\nimport FeedbackOptions from './feedbackoptions-ui/feedbackoptions';\nimport Section from './section-ui/section';\nimport Notification from './notification-ui/notification';\nimport styles from './app.module.css';\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  getState = () => {\n    const stateArr = Object.keys(this.state);\n    return stateArr;\n  };\n\n  onLeaveFeedback = stateKey => {\n    this.setState(prevState => ({\n      [stateKey]: prevState[stateKey] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const totalFeedback = this.state.good + this.state.neutral + this.state.bad;\n    return totalFeedback;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const percentage = Math.round(\n      (this.state.good / this.countTotalFeedback()) * 100,\n    );\n    return percentage;\n  };\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.getState()}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"statistics_list__3No4m\",\"value\":\"statistics_value__TXfN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"feedback_button__3s-ka\",\"list\":\"feedback_list__3LR3K\",\"listItem\":\"feedback_listItem__15MHB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"notification_title__3XqIl\"};"],"sourceRoot":""}